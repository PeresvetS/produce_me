generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  userId          String         @unique
  username        String         @unique
  subscriptionEnd DateTime?
  messageCount    Int            @default(0)
  newDialogCount  Int            @default(0)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  userData        Json?
  threadId        String?        // Оставляем для обратной совместимости
  totalTokensUsed Int            @default(0)
  conversations   Conversation[]
  botThreads      BotThread[]
}

model Admin {
  id     Int    @id @default(autoincrement())
  userId String @unique
}

model Conversation {
  id               Int      @id @default(autoincrement())
  userId           String
  botType          BotType
  userMessage      String
  assistantMessage String
  timestamp        DateTime @default(now())
  user             User     @relation(fields: [userId], references: [userId])
}

model BotThread {
  id       Int     @id @default(autoincrement())
  userId   String
  botType  BotType
  threadId String?  // Добавляем ? чтобы разрешить null значения
  user     User    @relation(fields: [userId], references: [userId])

  @@unique([userId, botType])
}

enum BotType {
  PRODUCER
  MARKETER
  CUSDEV
}